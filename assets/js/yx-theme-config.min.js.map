{
  "version": 3,
  "file": "yx-theme-config.min.js",
  "sources": [
    "webpack://siteConfig/webpack/universalModuleDefinition",
    "webpack://siteConfig/./assets/js/yx-theme-config.js"
  ],
  "sourcesContent": [
    "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"siteConfig\"] = factory();\n\telse\n\t\troot[\"siteConfig\"] = factory();\n})(window, function() {\nreturn ",
    "/**!\r\n * siteConfig v1.1.0.180718_beta\r\n */\r\n(function (YX) {\r\n\tlet DEFAULT_CONFIG = {\r\n\t\t\t\theaderFooter: true,\r\n\t\t\t\tgoogleAnalytics: true,\r\n\t\t\t\tgithubRibbon: true,\r\n\t\t\t\tfixedToolbar: true,\r\n\t\t\t\tpreviewCode: true,\r\n\t\t\t\tqUnit: true,\r\n\t\t\t\tdisqus: true,\r\n\t\t\t\tserviceWorker: true\r\n\t\t\t},\r\n\t\t\tYX_SITE_CONFIG = [{\r\n\t\t\t\tname: 'YX-JS-ToolKit',\r\n\t\t\t\tpathNameRoot: 'YX-JS-ToolKit',\r\n\t\t\t\tcustomConfig: {},\r\n\t\t\t}, {\r\n\t\t\t\tname: 'YX-WebThemeKit',\r\n\t\t\t\tpathNameRoot: 'YX-WebThemeKit',\r\n\t\t\t\tcustomConfig: {},\r\n\t\t\t}, {\r\n\t\t\t\tname: 'YX-CSS-ToolKit',\r\n\t\t\t\tpathNameRoot: 'YX-CSS-ToolKit',\r\n\t\t\t\tcustomConfig: {\r\n\t\t\t\t\tserviceWorker: false\r\n\t\t\t\t},\r\n\t\t\t}, {\r\n\t\t\t\tname: 'Others',\r\n\t\t\t\tpathNameRoot: '',\r\n\t\t\t\tcustomConfig: {\r\n\t\t\t\t\theaderFooter: false,\r\n\t\t\t\t\tgoogleAnalytics: false,\r\n\t\t\t\t\tgithubRibbon: false,\r\n\t\t\t\t\tserviceWorker: false\r\n\t\t\t\t},\r\n\t\t\t}],\r\n\t\t\tconfigUrl = {\r\n\t\t\t\theaderFooter: {\r\n\t\t\t\t\tfirstScreen: true,\r\n\t\t\t\t\turl: 'https://gyx8899.github.io/YX-WebThemeKit/theme-header-footer/headerFooter.min.js'\r\n\t\t\t\t},\r\n\t\t\t\tgoogleAnalytics: {\r\n\t\t\t\t\turl: 'https://gyx8899.github.io/YX-WebThemeKit/fn-google-analytics/googleAnalytics.min.js'\r\n\t\t\t\t},\r\n\t\t\t\tgithubRibbon: {\r\n\t\t\t\t\turl: 'https://gyx8899.github.io/YX-WebThemeKit/theme-github-ribbon/githubRibbon.min.js'\r\n\t\t\t\t},\r\n\t\t\t\tfixedToolbar: {\r\n\t\t\t\t\turl: 'https://gyx8899.github.io/YX-WebThemeKit/theme-fixed-toolbar/fixedToolbar.min.js'\r\n\t\t\t\t},\r\n\t\t\t\tpreviewCode: {\r\n\t\t\t\t\turl: 'https://gyx8899.github.io/YX-WebThemeKit/fn-preview-code/previewCode.min.js?init=auto',\r\n\t\t\t\t\tcondition: () => document.querySelectorAll('[data-toggle=\"previewCode\"]').length\r\n\t\t\t\t},\r\n\t\t\t\tqUnit: {\r\n\t\t\t\t\turl: 'https://gyx8899.github.io/YX-WebThemeKit/fn-qunit/qunit.min.js',\r\n\t\t\t\t\tcondition: () => siteConfig.queryParams['qunit'] !== undefined\r\n\t\t\t\t},\r\n\t\t\t\tdisqus: {\r\n\t\t\t\t\turl: 'https://gyx8899.github.io/YX-WebThemeKit/fn-disqus/disqus.min.js',\r\n\t\t\t\t\tcondition: () => !YX.Util.navigator.isZHLanguage()\r\n\t\t\t\t},\r\n\t\t\t\tserviceWorker: {\r\n\t\t\t\t\turl: 'https://gyx8899.github.io/YX-WebThemeKit/assets/js/sw-register.js?v=' + Date.now(),\r\n\t\t\t\t\tcondition: () => enableServiceWorker()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tsitePathName = document.location.pathname,\r\n\t\t\tsiteConfig = YX_SITE_CONFIG.filter(function (site) {\r\n\t\t\t\treturn site.pathNameRoot.toLowerCase() === sitePathName.split('/')[1].toLowerCase();\r\n\t\t\t})[0] || YX_SITE_CONFIG[YX_SITE_CONFIG.length - 1];\r\n\r\n\tsiteConfig.queryParams = YX.Util.url.getUrlQueryParams();\r\n\r\n\thandleParameters();\r\n\r\n\twindow.addEventListener(\"load\", () => siteConfig && loadConfigs(siteConfig, false), false);\r\n\r\n\tsiteConfig && loadConfigs(siteConfig, true);\r\n\r\n\t/**\r\n\t * Enable PWA server worker when it is available\r\n\t */\r\n\tfunction enableServiceWorker()\r\n\t{\r\n\t\tlet isEnabled = false;\r\n\t\tif ('serviceWorker' in navigator)\r\n\t\t{\r\n\t\t\twindow.addEventListener('load', () => {\r\n\t\t\t\tlet pathNameRoot = siteConfig.pathNameRoot ? siteConfig.pathNameRoot + '/' : '',\r\n\t\t\t\t\t\tcommonPath = this.location.origin + '/' + pathNameRoot,\r\n\t\t\t\t\t\tswPath = commonPath + 'service-worker.js',\r\n\t\t\t\t\t\tswScope = '/' + pathNameRoot;\r\n\t\t\t\tnavigator.serviceWorker.register(swPath, {scope: swScope})\r\n\t\t\t\t\t\t.then(function (registration) {\r\n\t\t\t\t\t\t\t// Registration successful\r\n\t\t\t\t\t\t\tconsole.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n\t\t\t\t\t\t\tlet triggerNotification = (title = 'Received Amazing Feature', body = '\"Refresh Page\" to get update!', tag = title) => {\r\n\t\t\t\t\t\t\t\tlet permissionNotification = () => {\r\n\t\t\t\t\t\t\t\t\tconst option = {\r\n\t\t\t\t\t\t\t\t\t\ttag: 'reload-window',\r\n\t\t\t\t\t\t\t\t\t\ttitle: title,\r\n\t\t\t\t\t\t\t\t\t\tbody: body,\r\n\t\t\t\t\t\t\t\t\t\ticon: commonPath + 'assets/img/ms-icon-310x310.png'\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\treturn registration.showNotification(title, option);\r\n\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\tif (!(\"Notification\" in window))\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\talert(\"This browser does not support desktop notification\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (Notification.permission === \"granted\")\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tpermissionNotification();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (Notification.permission !== 'denied')\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tNotification.requestPermission(function (permission) {\r\n\t\t\t\t\t\t\t\t\t\tif (permission === \"granted\")\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tpermissionNotification();\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t// updatefound is fired if service-worker.js changes.\r\n\t\t\t\t\t\t\tregistration.onupdatefound = function () {\r\n\t\t\t\t\t\t\t\t// The updatefound event implies that reg.installing is set;\r\n\t\t\t\t\t\t\t\t// see https://w3c.github.io/ServiceWorker/#service-worker-registration-updatefound-event\r\n\t\t\t\t\t\t\t\tvar installingWorker = registration.installing;\r\n\t\t\t\t\t\t\t\tinstallingWorker.onstatechange = function () {\r\n\t\t\t\t\t\t\t\t\tswitch (installingWorker.state)\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tcase 'installed':\r\n\t\t\t\t\t\t\t\t\t\t\tif (navigator.serviceWorker.controller)\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t// At this point, the old content will have been purged and the fresh content will have been added to the cache.\r\n\t\t\t\t\t\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is available; please refresh.\" message in the page's interface.\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('New or updated content is available.');\r\n\t\t\t\t\t\t\t\t\t\t\t\ttriggerNotification();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t// At this point, everything has been precached. It's the perfect time to display a \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Content is now available offline!');\r\n\t\t\t\t\t\t\t\t\t\t\t\ttriggerNotification('Offline', 'You are offline!')\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\tcase 'redundant':\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.error('The installing service worker became redundant.');\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(function (err) {\r\n\t\t\t\t\t\t\t// Registration failed\r\n\t\t\t\t\t\t\tconsole.log('ServiceWorker registration failed: ', err);\r\n\t\t\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tisEnabled = true;\r\n\t\t}\r\n\t\treturn isEnabled;\r\n\t}\r\n\r\n\t/***\r\n\t * Load site config components\r\n\t * @param {Object} configInfo\r\n\t * @param {Boolean} isFirstScreen, true: load resource before dom ready, false: load resource after dom ready\r\n\t */\r\n\tfunction loadConfigs(configInfo, isFirstScreen)\r\n\t{\r\n\t\tfor (let config in DEFAULT_CONFIG)\r\n\t\t{\r\n\t\t\tlet isConfigTrue = (configInfo.customConfig && configInfo.customConfig.hasOwnProperty(config)) ? configInfo.customConfig[config] : DEFAULT_CONFIG[config],\r\n\t\t\t\t\tisInSameScreen = (isFirstScreen && configUrl[config].firstScreen) || (!isFirstScreen && !configUrl[config].firstScreen),\r\n\t\t\t\t\tisNoCondition = !configUrl[config].condition,\r\n\t\t\t\t\tisMatchCondition = !isNoCondition && configUrl[config].condition();\r\n\t\t\tif (isConfigTrue && isInSameScreen && (isNoCondition || isMatchCondition))\r\n\t\t\t{\r\n\t\t\t\tYX.Util.load.loadScript(configUrl[config].url, null, null, {isAsync: !isFirstScreen});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Load Dev resource when url has param '&env=dev'\r\n\t */\r\n\tfunction handleParameters()\r\n\t{\r\n\t\t// Handle page parameters\r\n\t\tif (siteConfig.queryParams['env'] === 'dev'\r\n\t\t\t\t|| (siteConfig.name === 'YX-WebThemeKit' && siteConfig.queryParams['_ijt'] !== ''))\r\n\t\t{\r\n\t\t\t// Intellij IDEA\r\n\t\t\tlet replacedPath = 'https://gyx8899.github.io/',\r\n\t\t\t\t\tnewPath = '../../../';\r\n\t\t\tif ((location.hostname === '127.0.0.1' || location.hostname === 'localhost') && !siteConfig.queryParams['_ijt'])\r\n\t\t\t{\r\n\t\t\t\treplacedPath += 'YX-WebThemeKit';\r\n\t\t\t\tnewPath = location.origin;\r\n\t\t\t\tsiteConfig.customConfig.headerFooter = true;\r\n\t\t\t}\r\n\t\t\tObject.keys(configUrl).forEach(function (key) {\r\n\t\t\t\tif (configUrl[key].url)\r\n\t\t\t\t{\r\n\t\t\t\t\tconfigUrl[key].url = configUrl[key].url.replace(replacedPath, newPath).replace('.min.js', '.js');\r\n\t\t\t\t\tif (siteConfig.queryParams['min'] === 'false')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconfigUrl[key].url = configUrl[key].url.replace('.min.js', '.js')\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Note: Use double quotes, not single quotes;\r\n\t\t// Handle ?assign=true&aaa=123&bbb=\"234\"&ccc=true&ddd=[\"a\", 2, true]&&eee={\"ab\": true}\r\n\t\tlet isAssignEnabled = siteConfig.queryParams['assign'];\r\n\t\tif (isAssignEnabled === 'true')\r\n\t\t{\r\n\t\t\tdocument.onreadystatechange = function () {\r\n\t\t\t\tif (document.readyState === 'interactive')\r\n\t\t\t\t{\r\n\t\t\t\t\tlet params = siteConfig.queryParams;\r\n\t\t\t\t\tfor (let key in params)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (window[key] !== undefined && params.hasOwnProperty(key))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twindow[key] = JSON.parse(decodeURIComponent(params[key]));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Note: Use double quotes, not single quotes;\r\n\t\t// Handle ?apply=initState(1, \"abc\", {\"a\": true})\r\n\t\tlet paramsApply = siteConfig.queryParams['apply'];\r\n\t\tif (paramsApply !== undefined)\r\n\t\t{\r\n\t\t\tparamsApply = decodeURIComponent(paramsApply);\r\n\t\t\tlet funcName = paramsApply.split('(')[0],\r\n\t\t\t\t\tparams = JSON.parse('[' + paramsApply.substring(funcName.length + 1, paramsApply.length - 1) + ']');\r\n\t\t\twindow.addEventListener('load', () => {\r\n\t\t\t\twindow[funcName](...params);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Handle theme config parameters\r\n\t\tlet themeConfigParams = YX.Util.url.getUrlQueryParams(getScriptName());\r\n\t\tif (themeConfigParams['config'])\r\n\t\t{\r\n\t\t\tthemeConfigParams['config'].split(',').forEach(themeName => {\r\n\t\t\t\tsiteConfig.customConfig[themeName] = true;\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (themeConfigParams['ignore'])\r\n\t\t{\r\n\t\t\tthemeConfigParams['ignore'].split(',').forEach(themeName => {\r\n\t\t\t\tsiteConfig.customConfig[themeName] = false;\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * getScriptName\r\n\t * @return {*}\r\n\t */\r\n\tfunction getScriptName()\r\n\t{\r\n\t\tlet error = new Error()\r\n\t\t\t\t, source\r\n\t\t\t\t, lastStackFrameRegex = new RegExp(/.+\\/(.*?):\\d+(:\\d+)*$/)\r\n\t\t\t\t, currentStackFrameRegex = new RegExp(/getScriptName \\(.+\\/(.*):\\d+:\\d+\\)/);\r\n\r\n\t\tif (error.stack && (source = lastStackFrameRegex.exec(error.stack.trim())) && (source.length > 1 && source[1] !== \"\"))\r\n\t\t\treturn source[1];\r\n\t\telse if (error.stack && (source = currentStackFrameRegex.exec(error.stack.trim())))\r\n\t\t\treturn source[1];\r\n\t\telse if (error['fileName'] !== undefined)\r\n\t\t\treturn error['fileName'];\r\n\t}\r\n\r\n\twindow.siteConfig = siteConfig;\r\n\r\n\t// Compatible with webpack\r\n\tif (typeof exports === 'object' && typeof module === 'object')\r\n\t{\r\n\t\tmodule.exports = siteConfig;\r\n\t}\r\n})(window.YX);"
  ],
  "mappings": "AAAA;;;;ACGA;;;AAuPA",
  "sourceRoot": ""
}